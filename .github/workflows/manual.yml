# This is a basic workflow that is manually triggered

name: Manual workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Person to greet'
        # Default value if no value is explicitly provided
        default: 'World'
        # Input has to be provided for the workflow to run
        required: true
        # The data type of the input
        type: string

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v3   # 引用 actions/checkout 这个 action，与所在的 github 仓库同名
        with:
         submodules: true  # Fetch Hugo themes (true OR recursive) 获取 submodule 主题
         fetch-depth: 0    # Fetch all history for .GitInfo and .Lastmod
         
      - name: Setup Hugo	# 步骤名自取
        uses: peaceiris/actions-hugo@v2   # Hugo 官方提供的 action，用于在任务环境中获取 hugo
        with:
          hugo-version: '0.110.0'	# 获取指定版本的 hugo
          extended: false

      - name: Build Site
        run: |
          pwd
          ls
          hugo --minify
          
      - name: Deploy Pages
        uses: peaceiris/actions-gh-pages@v3	  # 一个自动发布 github pages 的 action
        with:
          external_repository: topaicool/topaicool.github.io	  # 发布到哪个 repo
          personal_token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}	# 发布到其他 repo 需要在对应的 repo 上粘贴生成的 personal_access_token
          #1. 创建 Personal_Access_Token：
          #   GitHub 个人账号 -> Settings -> Developer settings -> Personal access tokens ->  Tokens (classic) -> New personal access token (classic)
          #   - Expiration: No expiration
          #   - Select scopes: 全选
          #2. 粘贴 Personal_Access_Token：
          #   进入目标 repo -> Settings -> Security -> Secrets and variables -> Actions，选择 New repository secret -> 粘贴前面生成的 personal_access_token
          publish_dir: ./public	
          #注意这里指的是 Pages 要发布哪个文件夹的内容，而不是指发布到目标仓库的什么位置；因为 hugo 默认生成静态网页到 public 文件夹，所以这里发布 public 文件夹里的内容。
          publish_branch: gh-pages	# 发布到哪个 branch
          force_orphan: true
          full_commit_message: ${{ github.event.head_commit.message }}



    
